{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\my-app\\\\my-app\\\\src\\\\Component\\\\Accounting.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  // State variables for the checkboxes\n  const [isFeeTypeChecked, setIsFeeTypeChecked] = useState(false);\n  const [isWaiverTypeChecked, setIsWaiverTypeChecked] = useState(false);\n\n  // Function to handle fee type checkbox change\n  const handleFeeTypeChange = () => {\n    setIsFeeTypeChecked(!isFeeTypeChecked);\n  };\n\n  // Function to handle waiver type checkbox change\n  const handleWaiverTypeChange = () => {\n    setIsWaiverTypeChecked(!isWaiverTypeChecked);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containerStyle\",\n    style: {\n      alignItems: 'center',\n      backgroundColor: 'white'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: isFeeTypeChecked,\n        onChange: handleFeeTypeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"feeType\",\n        children: \"Fee Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: isWaiverTypeChecked,\n        onChange: handleWaiverTypeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"waiverType\",\n        children: \"Waiver Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {},\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Generic Fee Types\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"8tYGB2LydzxEvkpSh/DVwliNsmQ=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faHome","jsxDEV","_jsxDEV","Navbar","_s","isFeeTypeChecked","setIsFeeTypeChecked","isWaiverTypeChecked","setIsWaiverTypeChecked","handleFeeTypeChange","handleWaiverTypeChange","className","style","alignItems","backgroundColor","children","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","_c","$RefreshReg$"],"sources":["C:/React/my-app/my-app/src/Component/Accounting.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Navbar = () => {\r\n  // State variables for the checkboxes\r\n  const [isFeeTypeChecked, setIsFeeTypeChecked] = useState(false);\r\n  const [isWaiverTypeChecked, setIsWaiverTypeChecked] = useState(false);\r\n\r\n  // Function to handle fee type checkbox change\r\n  const handleFeeTypeChange = () => {\r\n    setIsFeeTypeChecked(!isFeeTypeChecked);\r\n  };\r\n\r\n  // Function to handle waiver type checkbox change\r\n  const handleWaiverTypeChange = () => {\r\n    setIsWaiverTypeChecked(!isWaiverTypeChecked);\r\n  };\r\n\r\n  return (\r\n    <div className='containerStyle' style={{ alignItems: 'center', backgroundColor: 'white' }}>\r\n      {/* Your existing code */}\r\n\r\n      {/* Checkboxes for Fee type and Waiver type */}\r\n      <div>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={isFeeTypeChecked}\r\n          onChange={handleFeeTypeChange}\r\n        />\r\n        <label htmlFor=\"feeType\">Fee Type</label>\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={isWaiverTypeChecked}\r\n          onChange={handleWaiverTypeChange}\r\n        />\r\n        <label htmlFor=\"waiverType\">Waiver Type</label>\r\n      </div>\r\n\r\n      <div style={{}}>\r\n        <h2>Generic Fee Types</h2>\r\n      </div>\r\n\r\n      {/* Your remaining code */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,MAAM,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB;EACA,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACS,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;;EAErE;EACA,MAAMW,mBAAmB,GAAGA,CAAA,KAAM;IAChCH,mBAAmB,CAAC,CAACD,gBAAgB,CAAC;EACxC,CAAC;;EAED;EACA,MAAMK,sBAAsB,GAAGA,CAAA,KAAM;IACnCF,sBAAsB,CAAC,CAACD,mBAAmB,CAAC;EAC9C,CAAC;EAED,oBACEL,OAAA;IAAKS,SAAS,EAAC,gBAAgB;IAACC,KAAK,EAAE;MAAEC,UAAU,EAAE,QAAQ;MAAEC,eAAe,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAIxFb,OAAA;MAAAa,QAAA,gBACEb,OAAA;QACEc,IAAI,EAAC,UAAU;QACfC,OAAO,EAAEZ,gBAAiB;QAC1Ba,QAAQ,EAAET;MAAoB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACFpB,OAAA;QAAOqB,OAAO,EAAC,SAAS;QAAAR,QAAA,EAAC;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACNpB,OAAA;MAAAa,QAAA,gBACEb,OAAA;QACEc,IAAI,EAAC,UAAU;QACfC,OAAO,EAAEV,mBAAoB;QAC7BW,QAAQ,EAAER;MAAuB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACFpB,OAAA;QAAOqB,OAAO,EAAC,YAAY;QAAAR,QAAA,EAAC;MAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eAENpB,OAAA;MAAKU,KAAK,EAAE,CAAC,CAAE;MAAAG,QAAA,eACbb,OAAA;QAAAa,QAAA,EAAI;MAAiB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGH,CAAC;AAEV,CAAC;AAAClB,EAAA,CA5CID,MAAM;AAAAqB,EAAA,GAANrB,MAAM;AA8CZ,eAAeA,MAAM;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}