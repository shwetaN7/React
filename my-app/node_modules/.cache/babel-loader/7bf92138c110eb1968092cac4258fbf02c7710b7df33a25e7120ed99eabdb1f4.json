{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\my-app\\\\my-app\\\\src\\\\Component\\\\AddVender.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBox = ({\n  handleSearch\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const handleChange = e => {\n    const term = e.target.value;\n    setSearchTerm(term);\n    handleSearch(term);\n  };\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    placeholder: \"Search...\",\n    value: searchTerm,\n    onChange: handleChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBox, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n_c = SearchBox;\nconst Navbar = () => {\n  _s2();\n  const [formData, setFormData] = useState({\n    VendorName: '',\n    VendorContact: '',\n    VendorEMail: '',\n    VendorAddress: '',\n    VendorRemark: ''\n  });\n  const [VendorName, setVendorName] = useState([]);\n  const [filteredVendorName, setFilteredVendorName] = useState([]);\n  useEffect(() => {\n    setFilteredVendorName(VendorName);\n  }, [VendorName]);\n  const handleChange = (e, rowIndex, columnName) => {\n    const {\n      value\n    } = e.target;\n    const updatedVendorName = filteredVendorName.map((vendor, index) => {\n      if (index === rowIndex) {\n        return {\n          ...vendor,\n          [columnName]: value\n        };\n      }\n      return vendor;\n    });\n    setVendorName(updatedVendorName);\n    setFilteredVendorName(updatedVendorName);\n  };\n  const handleAddRow = () => {\n    setVendorName([...VendorName, formData]);\n    setFormData({\n      VendorName: '',\n      VendorContact: '',\n      VendorEMail: '',\n      VendorAddress: '',\n      VendorRemark: '',\n      UpdatedBy: '',\n      Date\n    });\n  };\n  const handleSearch = searchTerm => {\n    console.log(\"Search term:\", searchTerm);\n    const filteredVendors = VendorName.filter(vendor => {\n      return Object.values(vendor).some(value => value.toLowerCase().includes(searchTerm.toLowerCase()));\n    });\n    console.log(\"Vendor Name:\", filteredVendors);\n    setFilteredVendorName(filteredVendors);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containerStyle\",\n    style: {\n      backgroundColor: 'white'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s2(Navbar, \"MTAwNfoy4llB/n+2yzTGN2+wgZw=\");\n_c2 = Navbar;\nexport default Navbar;\nvar _c, _c2;\n$RefreshReg$(_c, \"SearchBox\");\n$RefreshReg$(_c2, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SearchBox","handleSearch","_s","searchTerm","setSearchTerm","handleChange","e","term","target","value","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","Navbar","_s2","formData","setFormData","VendorName","VendorContact","VendorEMail","VendorAddress","VendorRemark","setVendorName","filteredVendorName","setFilteredVendorName","rowIndex","columnName","updatedVendorName","map","vendor","index","handleAddRow","UpdatedBy","Date","console","log","filteredVendors","filter","Object","values","some","toLowerCase","includes","className","style","backgroundColor","_c2","$RefreshReg$"],"sources":["C:/React/my-app/my-app/src/Component/AddVender.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst SearchBox = ({ handleSearch }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    const term = e.target.value;\r\n    setSearchTerm(term);\r\n    handleSearch(term);\r\n  };\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"Search...\"\r\n      value={searchTerm}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nconst Navbar = () => {\r\n  const [formData, setFormData] = useState({\r\n    VendorName: '',\r\n    VendorContact: '',\r\n    VendorEMail: '',\r\n    VendorAddress: '',\r\n    VendorRemark: ''\r\n  });\r\n\r\n  const [VendorName, setVendorName] = useState([]);\r\n  const [filteredVendorName, setFilteredVendorName] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setFilteredVendorName(VendorName);\r\n  }, [VendorName]);\r\n\r\n  const handleChange = (e, rowIndex, columnName) => {\r\n    const { value } = e.target;\r\n    const updatedVendorName = filteredVendorName.map((vendor, index) => {\r\n      if (index === rowIndex) {\r\n        return {\r\n          ...vendor,\r\n          [columnName]: value\r\n        };\r\n      }\r\n      return vendor;\r\n    });\r\n    setVendorName(updatedVendorName);\r\n    setFilteredVendorName(updatedVendorName);\r\n  };\r\n\r\n  const handleAddRow = () => {\r\n    setVendorName([...VendorName, formData]);\r\n    setFormData({\r\n      VendorName: '',\r\n      VendorContact: '',\r\n      VendorEMail: '',\r\n      VendorAddress: '',\r\n      VendorRemark: '',\r\n      UpdatedBy: '',\r\n      Date \r\n    });\r\n  };\r\n\r\n  const handleSearch = (searchTerm) => {\r\n    console.log(\"Search term:\", searchTerm);\r\n    const filteredVendors = VendorName.filter(vendor => {\r\n      return Object.values(vendor).some(value =>\r\n        value.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    });\r\n    console.log(\"Vendor Name:\", filteredVendors);\r\n    setFilteredVendorName(filteredVendors);\r\n  };\r\n\r\n  return (\r\n    <div className='containerStyle' style={{ backgroundColor: 'white' }}>\r\n      {/* Rest of your JSX */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}