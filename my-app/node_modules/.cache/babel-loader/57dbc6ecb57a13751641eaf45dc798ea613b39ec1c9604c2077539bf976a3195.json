{"ast":null,"code":"import React from 'react';\nimport { scaleLinear } from 'd3-scale';\nimport ReactMatrixTable from '@paraboly/react-matrix-table';\n\n// const MatrixTable = () => {\n//   // Sample data representing class names and corresponding payment particulars\n//   const classData = [\n//     {\n//       className: 'Class 1',\n//       paymentParticulars: [\n//         { name: 'Admission Fee', amount: 2000 },\n//         { name: 'Tuition Fee', amount: 5000 },\n//         { name: 'Exam Fee', amount: 1000 }\n//       ]\n//     },\n//     {\n//       className: 'Class 2',\n//       paymentParticulars: [\n//         { name: 'Admission Fee', amount: 2500 },\n//         { name: 'Tuition Fee', amount: 6000 },\n//         { name: 'Exam Fee', amount: 1200 }\n//       ]\n//     },\n//     {\n//       className: 'Class 3',\n//       paymentParticulars: [\n//         { name: 'Admission Fee', amount: 3000 },\n//         { name: 'Tuition Fee', amount: 7000 },\n//         { name: 'Exam Fee', amount: 1500 }\n//       ]\n//     }\n//   ];\n\n//   return (\n//     <table border=\"1\">\n//       <thead>\n//         <tr>\n//           <th>Class Name</th>\n//           {classData[0].paymentParticulars.map((particular, index) => (\n//             <th key={index}>{particular.name}</th>\n//           ))}\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {classData.map((classItem, idx) => (\n//           <tr key={idx}>\n//             <td>{classItem.className}</td>\n//             {classItem.paymentParticulars.map((particular, index) => (\n//               <td key={index}>{particular.amount}</td>\n//             ))}\n//           </tr>\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// };\n\n// export default MatrixTable;","map":{"version":3,"names":["React","scaleLinear","ReactMatrixTable"],"sources":["C:/React/my-app/my-app/src/Component/Fee Structure.js"],"sourcesContent":["import React from 'react';\r\nimport { scaleLinear } from 'd3-scale';\r\nimport ReactMatrixTable from '@paraboly/react-matrix-table';\r\n\r\n// const MatrixTable = () => {\r\n//   // Sample data representing class names and corresponding payment particulars\r\n//   const classData = [\r\n//     {\r\n//       className: 'Class 1',\r\n//       paymentParticulars: [\r\n//         { name: 'Admission Fee', amount: 2000 },\r\n//         { name: 'Tuition Fee', amount: 5000 },\r\n//         { name: 'Exam Fee', amount: 1000 }\r\n//       ]\r\n//     },\r\n//     {\r\n//       className: 'Class 2',\r\n//       paymentParticulars: [\r\n//         { name: 'Admission Fee', amount: 2500 },\r\n//         { name: 'Tuition Fee', amount: 6000 },\r\n//         { name: 'Exam Fee', amount: 1200 }\r\n//       ]\r\n//     },\r\n//     {\r\n//       className: 'Class 3',\r\n//       paymentParticulars: [\r\n//         { name: 'Admission Fee', amount: 3000 },\r\n//         { name: 'Tuition Fee', amount: 7000 },\r\n//         { name: 'Exam Fee', amount: 1500 }\r\n//       ]\r\n//     }\r\n//   ];\r\n\r\n//   return (\r\n//     <table border=\"1\">\r\n//       <thead>\r\n//         <tr>\r\n//           <th>Class Name</th>\r\n//           {classData[0].paymentParticulars.map((particular, index) => (\r\n//             <th key={index}>{particular.name}</th>\r\n//           ))}\r\n//         </tr>\r\n//       </thead>\r\n//       <tbody>\r\n//         {classData.map((classItem, idx) => (\r\n//           <tr key={idx}>\r\n//             <td>{classItem.className}</td>\r\n//             {classItem.paymentParticulars.map((particular, index) => (\r\n//               <td key={index}>{particular.amount}</td>\r\n//             ))}\r\n//           </tr>\r\n//         ))}\r\n//       </tbody>\r\n//     </table>\r\n//   );\r\n// };\r\n\r\n// export default MatrixTable;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,UAAU;AACtC,OAAOC,gBAAgB,MAAM,8BAA8B;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}